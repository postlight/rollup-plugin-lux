exports[`#transform() with lux sub class [ClassDeclaration] export default [Identifier] appends an Object.defineProperty call to the module 1`] = `
"import { Model } from \'lux-framework\';

class User extends Model {

}

Object.defineProperty(User, \'name\', { value: \'User\' });

export default User;
"
`;

exports[`#transform() with lux sub class export default [ClassExpression] appends an Object.defineProperty call to the module 1`] = `
"import { Model } from \'lux-framework\';

export default class User extends Model {

}

Object.defineProperty(User, \'name\', { value: \'User\' });
"
`;

exports[`#transform() without lux sub class [ClassDeclaration] export default [Identifier] does not modify the source 1`] = `
"class Point {
  constructor(x, y) {
    Object.assign(this, { x, y });
  }
}

Object.defineProperty(Point, \'name\', { value: \'Point\' });

export default Point;
"
`;

exports[`#transform() without lux sub class [FunctionDeclaration] export default [Identifier] does not modify the source 1`] = `
"function test() {

}

export default test;
"
`;

exports[`#transform() without lux sub class export default [ArrowFunctionExpression] does not modify the source 1`] = `
"export default () => undefined;
"
`;

exports[`#transform() without lux sub class named export does not modify the source 1`] = `
"export const TEST = true;
"
`;
